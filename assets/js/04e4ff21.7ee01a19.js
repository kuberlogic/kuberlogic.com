"use strict";(self.webpackChunkkuberlogic_com=self.webpackChunkkuberlogic_com||[]).push([[9003],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=i.createContext({}),l=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=l(e.components);return i.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(t),g=a,m=d["".concat(c,".").concat(g)]||d[g]||u[g]||o;return t?i.createElement(m,r(r({ref:n},s),{},{components:t})):i.createElement(m,r({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=d;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,r[1]=p;for(var l=2;l<o;l++)r[l]=t[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var i=t(7462),a=(t(7294),t(3905));const o={id:"application-instances-update",title:"Updating application instances",tags:["update","application","configuration"]},r=void 0,p={unversionedId:"configuring/application-instances-update",id:"configuring/application-instances-update",title:"Updating application instances",description:"Application instances update is an important part of day to day job of a SaaS offering.",source:"@site/docs/configuring/application-instances-update.md",sourceDirName:"configuring",slug:"/configuring/application-instances-update",permalink:"/docs/configuring/application-instances-update",draft:!1,editUrl:"https://github.com/kuberlogic/kuberlogic.com/blob/master/docs/configuring/application-instances-update.md",tags:[{label:"update",permalink:"/docs/tags/update"},{label:"application",permalink:"/docs/tags/application"},{label:"configuration",permalink:"/docs/tags/configuration"}],version:"current",frontMatter:{id:"application-instances-update",title:"Updating application instances",tags:["update","application","configuration"]},sidebar:"mySidebar",previous:{title:"Providing application access",permalink:"/docs/configuring/application-access-management"},next:{title:"Providing application credentials management",permalink:"/docs/configuring/application-credentials-management"}},c={},l=[],s={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Application instances update is an important part of day to day job of a SaaS offering.\nKuberLogic supports instance upgrade by providing a new version of container image and allows to accomplish this task in a several ways."),(0,a.kt)("h1",{id:"updating-all-application-instances-by-changing-docker-composeyml"},"Updating all application instances by changing ",(0,a.kt)("inlineCode",{parentName:"h1"},"docker-compose.yml")),(0,a.kt)("p",null,"The simplest way to upgrade application instances is to update container image in ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and reconfigure KuberLogic."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"services:\n  demo:\n    image: demo:v1 # change this to demo:v2 to upgrade applications to v2\n")),(0,a.kt)("p",null,"This option has some drawbacks though:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"All application instances will attempt to upgrade at the same time. This might result in hitting container registry limits or exhausting network"),(0,a.kt)("li",{parentName:"ul"},"All application will go down if there are any issues with the new version. It will not be possible to test the upgrade.")),(0,a.kt)("h1",{id:"updating-application-instances-by-setting-the-version-in-kuberlogic"},"Updating application instances by setting the version in KuberLogic"),(0,a.kt)("p",null,"It is also possible to trigger an update of an individual instance by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"--version")," option (or ",(0,a.kt)("inlineCode",{parentName:"p"},"version")," field in REST API call) when editing or creating the application instance.\nThis, of course, requires ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," changes to be made in advance and provided to KuberLogic (see installation guide):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'services:\n  demo:\n    image: demo:{{ default .Version "v1" }} # when a `version` field is not set use v1\n')),(0,a.kt)("p",null,"The snippet above uses Go template support for ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),". To learn more see the ",(0,a.kt)("a",{parentName:"p",href:"/docs/configuring/docker-compose"},"configuration guide")),(0,a.kt)("p",null,"Then, to change the instance version use command:\n",(0,a.kt)("inlineCode",{parentName:"p"},"kuberlogic edit --id <application instance id>  --version <new version>")))}u.isMDXComponent=!0}}]);